version: '3.8'

services:
  postgres:
    image: postgres:14.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fulcrum_production
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  memcached:
    image: memcached:1.6-alpine
    ports:
      - "11211:11211"
    command: memcached -m 128

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
      args:
        BASE_IMAGE: cm42-central:base
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      memcached:
        condition: service_started
    ports:
      - "3000:3000"
    environment:
      DB_HOST: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_URL: redis://redis:6379/0
      MEMCACHIER_SERVERS: memcached:11211
      DB_MIGRATE: "true"
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: "true"
    env_file:
      - .env.production
    volumes:
      - ./log:/app/log
      - ./tmp:/app/tmp
    command: bundle exec puma -C config/puma.rb

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
        BASE_IMAGE: cm42-central:base
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_URL: redis://redis:6379/0
      SIDEKIQ_CONCURRENCY: 10
      RAILS_ENV: production
    env_file:
      - .env.production
    volumes:
      - ./log:/app/log

volumes:
  postgres_data:
  redis_data: